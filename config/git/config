# Include a different Git config for work remotes
# The first character of the name is removed, as there are different cases and prefixes between different Orgs.
#[includeIf "hasconfig:remote.*.url:git@github.com:*ainsbury*/**/*"]
#  path = config_work
#[includeIf "hasconfig:remote.*.url:git@github.com:*ectar*/**/*"]
#  path = config_work

[user]
	email = {{e-mail}}
	name = {{name}}
	signingkey = {{ssh-key-id}}

[commit]
	template = ~/.config/git/gitmessage.txt
	gpgsign = true

[gpg "ssh"]
	allowedSignersFile = ~/.ssh/allowed_signers

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process

[core]
	autocrlf = false
	excludesfile = ~/.config/git/ignore
	editor = mate -w
	pager = delta
	eol = lf

[credential]
	helper = osxkeychain

[web]
	browser = google-chrome

[color]
	status = auto
	branch = auto
	interactive = auto
	diff = auto
	ui = true
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = 11
	frag = magenta bold
	old = red bold
	new = green bold
	commit = yellow bold
	whitespace = red reverse
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[alias]
    lg = !"git lg1"
    lg1 = !"git lg1-specific --all"
    lg2 = !"git lg2-specific --all"
    lg3 = !"git lg3-specific --all"
    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
	dsf = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git diff --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFXS; }; f"
	last = log -1 HEAD
    graph = log --oneline --graph --decorate
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
    conflicts = diff --name-only --diff-filter=U
    local-branches = !git branch -vv | cut -c 3- | awk '$3 !~/\\[/ { print $1 }'
    recent-branches = !git branch --sort=-committerdate | head
	latest-ver = !git describe --tags $(git rev-list --tags --max-count=1)

[url "git@github.com:"]
	insteadOf = https://github.com/

[secrets]
	providers = git secrets --aws-provider
	patterns = (A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}
	patterns = (\"|')?(AWS|aws|Aws)?_?(SECRET|secret|Secret)?_?(ACCESS|access|Access)?_?(KEY|key|Key)(\"|')?\\s*(:|=>|=)\\s*(\"|')?[A-Za-z0-9/\\+=]{40}(\"|')?
	patterns = (\"|')?(AWS|aws|Aws)?_?(ACCOUNT|account|Account)_?(ID|id|Id)?(\"|')?\\s*(:|=>|=)\\s*(\"|')?[0-9]{4}\\-?[0-9]{4}\\-?[0-9]{4}(\"|')?
	allowed = AKIAIOSFODNN7EXAMPLE
	allowed = wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

[interactive]
        diffFilter = delta --color-only

[delta]
        navigate = true
        line-numbers = true
        side-by-side = true
        line-numbers-left-format = ""
        line-numbers-right-format = "â”‚ "

[init]
	defaultBranch = main
[help]
	autocorrect = immediate
[push]
	autoSetupRemote = true
[pull]
	rebase = true
[fsck]
	zeroPaddedFilemode = ignore
[fetch "fsck"]
	zeroPaddedFilemode = ignore
[receive "fsck"]
	zeroPaddedFilemode = ignore

[filter "strip-notebook-output"]
	clean = jupyter nbconvert --ClearOutputPreprocessor.enabled=True --to=notebook --stdin --stdout --log-level=ERROR
